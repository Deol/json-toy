{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./lib/json-travel.js","webpack://[name]/./index.js","webpack://[name]/./lib/json-check-circular.js","webpack://[name]/./lib/json-get-val-by-keypath.js","webpack://[name]/./lib/json-toTreeString.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Type","json","cb","rootAlias","safeMode","isObject","TypeError","undefined","safeStack","safeKeys","keysArr","needCb","isFunction","isString","travel","obj","curKeyPath","depth","objIndex","indexOf","splice","push","k","newKeyPath","curDepth","v","isCircular","kIndex","spreadable","isSpreadable","getTypeOf","eTravel","JSON","stringify","eStringify","travelJson","checkCircular","getValByKeyPath","treeString","isCcl","cclKeysArr","kp","ts","cpl","cd","keyPath","circularTo","slice","circularProps","ownKeyCheck","isNullOrUndefined","split","forEach","replace","escapable","meta","\b","\t","\n","\f","\r","\"","\\","escapeString","string","lastIndex","test","a","charCodeAt","toString","_TreeChar_","I","T","L","_","SPLIT","1","2","3","4","5","6","7","8","9","10","isNodeStr","char","isArray","join","reg","RegExp","str","match","_isStartWith","_RegTreeLinkChars","_Reg_I_","_Reg_T_","_Reg_L_","_Reg___","_repl_I_","_repl_T_","_repl_L_","_repl___","replaceTreeLinkChar","_hasTreeLinkChar","checkNextSibling","w","h","arr","hasNextSibling","length","isUndefined","ele","wPos","hPos","isLast","repeatChar","res","isChar","parseInt","options","jsonName","space","vSpace","needValueOut","msRetrunChar","rootName","valueOut","isNill","String","isEmptyOwn","_SPACE_","isNaN","q","rpN","_I_","_T_","ft","Math","floor","_rT_","_I1_","typeStr","vs","lineArr","map","item","index","isFirst","isSpreadableNodeEndFlag","regNode","regVert","iLen","row","j","jLen","checkNext","cLen","regSimRoot1","regSimRoot2","fixArr","trimRight"],"mappings":"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","file":"jsonToy.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsonToy\"] = factory();\n\telse\n\t\troot[\"jsonToy\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var Type = require(\"./typeOf\");\n/**\n * 递归遍历一个json\n * @param {Object} json\n * @param {Function} cb callback(key,val,curKeyPath,typeStr,isComplexObj,curDepth,isCircular) and context is parent obj\n * @param {string} rootAlias\n * @param {Boolean} safeMode default is true\n * @returns {Array} keysArr\n */\nfunction travelJson(json,cb,rootAlias,safeMode){\n    if(!Type.isObject(json)){ throw new TypeError(\"The first param should be an Object instance!\"); }\n    // 安全模式\n    safeMode = safeMode===undefined ? true : !!safeMode;\n    var safeStack = [];//记录safe检查时候的对象\n    var safeKeys = []; //记录safe检查时候的key值\n    // res\n    var keysArr = [];\n    var needCb = Type.isFunction(cb);\n    rootAlias = (Type.isString(rootAlias) ? rootAlias : \"\") || \"ROOT\";\n    // loop\n    function travel(obj,curKeyPath,depth,cb){\n        if(obj!==null && obj!==undefined){\n            // safeMode\n            if(safeMode){\n                var objIndex = safeStack.indexOf(obj);\n                if(~objIndex){// ~-1 == 0\n                    safeStack.splice(objIndex + 1);// pop\n                    safeKeys.splice(objIndex + 1);// pop\n                }else{\n                    safeStack.push(obj);// push\n                    safeKeys.push(curKeyPath);\n                }\n            }\n            // loop\n            for(var k in obj){\n                if(obj.hasOwnProperty(k)){\n                    //这里即使curKeyPath为空字符串\"\"也请加上\".\",这样做是为了统一的循环次数，不管rootAlias是否为空字符串\"\"\n                    var newKeyPath = curKeyPath + \".\" + k;\n                    keysArr.push(newKeyPath+\"\");//push a new string\n                    // 记录下层级\n                    var curDepth = depth + 1;\n                    // 值\n                    var v = obj[k];\n                    var isCircular = false;\n                    // safeMode\n                    if(safeMode){\n                        var kIndex = safeStack.indexOf(v);\n                        if(~kIndex){// Circular\n                            isCircular = true;\n                            v = \"[Circular->\" + safeKeys[kIndex] + \"]\";\n                        }else{\n                            isCircular = false;\n                            v = obj[k];\n                        }\n                    }\n                    // 是否可以再展开，这里，函数被视为不可再展开\n                    var spreadable  = Type.isSpreadable(v) && !Type.isFunction(v);\n                    // do sth in callback...\n                    needCb && cb.call(obj,k,v,newKeyPath+\"\",Type.getTypeOf(v),spreadable,curDepth,isCircular);\n                    // then travel in deep\n                    if(spreadable){\n                        travel(v,newKeyPath,curDepth,cb);\n                    }\n                }\n            }\n        }\n    }\n    // do on catch mode\n    try{\n        travel(json, rootAlias || \"\", 1, cb);// 栈溢出，递归次数导致内存超限\n    }catch(eTravel){\n        try{\n            JSON.stringify(json);\n        }catch(eStringify){\n            throw eStringify;\n        }\n        throw eTravel;\n    }\n    return keysArr;\n}\n\nmodule.exports = travelJson;\n","\nvar travelJson = require(\"./lib/json-travel\"),\n    checkCircular = require('./lib/json-check-circular'),\n    getValByKeyPath = require(\"./lib/json-get-val-by-keypath\"),\n    treeString = require(\"./lib/json-toTreeString\");\n\n// exports\nmodule.exports = {\n    /**\n     * get value of property in json obj\n     * eg: getValByKey({a:{b:{c:1}}}, \"a.b.c\") = 1\n     * @param json\n     * @param keyPath\n     * @param ownKeyCheck\n     * @returns {Array|*}\n     */\n    getValByKeyPath: getValByKeyPath, // 通过keyPath获取json的属性值\n\n    /**\n     * Recursive traversal of json obj\n     * @param {Object}   json\n     * @param {Function} cb callback(key,val,curKeyPath,typeStr,isComplexObj,curDepth,isCircular) and context is parent obj\n     * @param {string}   rootAlias\n     * @param {Boolean}  safeMode   default is true\n     * @returns {Array}  keysArr\n     */\n    travelJson: travelJson,\n\n    /**\n     * convert a json obj to tree-like string\n     * @param {Object} json\n     * @param  {Object} options\n     *         {String} options.rootName\n     *    {char|Number} options.space\n     *         {Number} options.vSpace\n     *        {Boolean} options.valueOut\n     * @returns {string|*} a tree-like string\n     */\n    treeString: treeString,\n\n    /**\n     * check circular obj\n     * @param obj\n     * @returns {Object} {{isCircular: boolean, circularProps: Array}}\n     */\n    checkCircular: checkCircular\n};\n","var travelJson = require('./json-travel');\n/**\n * check circular obj\n * @param obj\n * @returns {{isCircular: boolean, circularProps: Array}}\n */\nfunction checkCircular(obj){\n    var isCcl = false;\n    var cclKeysArr = [];\n    travelJson(obj,function(k,v,kp,ts,cpl,cd,isCircular){\n        if(isCircular){\n            isCcl = true;\n            cclKeysArr.push({\n                keyPath: kp,\n                circularTo: v.slice(11,-1),\n                key: k,\n                value: v\n            });\n        }\n    },\"ROOT\",true);\n    return {\n        isCircular: isCcl,\n        circularProps: cclKeysArr\n    };\n}\n\n\nmodule.exports = checkCircular;\n","var Type = require(\"./typeOf\");\n/**\n * 通过keypath获取json的值，eg getValByKey({a:{b:{c:1}}}, \"a.b.c\") = 1\n * @param json\n * @param keyPath\n * @param ownKeyCheck\n * @returns {*}\n * 注意：没办法支持 路径中带有 a.b.c[1][2]这样的形式，建议写成a.b.c.1.2\n * a.b.c[1][2]这样的形式会被解析成 \"a\",\"b\",\"c[1][2]\"这样的属性名称\n * 这里之所以不支持这样的原因是：\n * 字符'['和']'也是可以作为属性名称存在的\n * a ={\n *    \"c[1][2]\": 1\n * }\n * 只能通过'.'操作符来进行分割\n * 然后，对于属性名称中，已经含有'.'的，要转化写法变成'&bull;'\n * 对于属性名中含有'&'的，需要转化成'&amp;',这样一来，如果属性名中含有'&bull;'，可以转化写成'&amp;bull;'\n */\nfunction getValByKey(json,keyPath, ownKeyCheck){\n\n    if(!Type.isObject(json) || !Type.isString(keyPath)){\n        throw new TypeError(\"Error type-in,check plz! (jsonObj,stringKeyPath)\");\n    }\n    ownKeyCheck = Type.isNullOrUndefined(ownKeyCheck) ? true : !!ownKeyCheck;\n    var v = json;\n    var propsArr = keyPath.split(\".\");\n    // var hasArrFlag = /\\[|]/g;\n    // var outPrint = \"obj['\" + propsArr.join(\"']['\") + \"'] \",\n    //     needWarn = false;\n    propsArr.forEach(function(k){\n        // if(!!k.match(hasArrFlag)){ needWarn = true; }\n        if(!Type.isNullOrUndefined(v)){\n            k = k.replace(/&bull;/g,\".\");//&bull; -> .\n            k = k.replace(/&amp;/g,\"&\"); //&amp; -> &  eg:如果你需要'&bull;'这个组合，可以写成'&amp;bull'\n            v = !ownKeyCheck ? v[k] : (v.hasOwnProperty(k) ? v[k] : undefined);\n        }else{\n            return v;\n        }\n    });\n    // needWarn && console.warn(\"It was deprecated that put char '[' or ']' in your keyPath,or in you property name\");\n    // needWarn && console.log(outPrint + \" = \" , v);\n    return v;\n}\n\nmodule.exports = getValByKey;\n\n","var Type = require(\"./typeOf\"),\n    travelJson = require(\"./json-travel\");\n/**\n * 缩略字符串\n * @param str\n * @returns {*|string}\n */\nfunction trimRight(str){\n    return str.replace(/(\\s|\\u00A0)+$/,\"\");\n}\n\n/**\n * 将string进行转义输出\n */\n// https://github.com/douglascrockford/JSON-js/blob/e39db4b7e6249f04a195e7dd0840e610cc9e941e/json2.js#L195\nvar escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    meta = { // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    };\nfunction escapeString(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    escapable.lastIndex = 0;//复原\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ?\n            c :\n        '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n// console.log(escapeString(\"english中文汉字博大精神\\n\\t\\r\\\"\\f\\b\"));\n\n// 不可用正则中的字符代替，如果需要，请转义\n// _TreeChar_中的字符与后面的正则逻辑强相关，请勿更改，请勿有重复的value\nvar _TreeChar_ = {\n    \"I\":  \"│\",\n    \"T\":  \"├\",\n    \"L\":  \"└\",\n    \"_\":  \"─\",\n    \"SPLIT\": \":\",\n    \"1\":  \" \",\n    \"2\":  \"  \",\n    \"3\":  \"   \",\n    \"4\":  \"    \",\n    \"5\":  \"     \",\n    \"6\":  \"      \",\n    \"7\":  \"       \",\n    \"8\":  \"        \",\n    \"9\":  \"         \",\n    \"10\": \"          \"\n};\n\n// char里面不要包含特殊正则字符，如果有，请转义\nfunction _isStartWith(char){\n    var c = \"\";\n    if(Type.isArray(char)){\n        c = char.join(\"|\");\n    }else{\n        c = char || c;\n    }\n    var reg = new RegExp(\"^(\" + c + \")+\");\n    return function(str){\n        return Type.isString(str) && !!str.match(reg);\n    };\n}\n// 是否为节点：父或者子节点\nvar isNodeStr = _isStartWith([_TreeChar_.T,_TreeChar_.L,\"ROOT\"]);\n\n// 检查是否包含连接符号\nvar _RegTreeLinkChars = new RegExp(\"^(\"+[_TreeChar_.I,_TreeChar_.T,_TreeChar_._,_TreeChar_.L].join(\"|\")+\")\",\"g\");\nfunction _hasTreeLinkChar(str){\n    return Type.isString(str) && str.match(_RegTreeLinkChars);\n}\n// 替换值中包含的连接符号\nvar _Reg_I_ = new RegExp(\"^\"+_TreeChar_.I,\"g\"),\n    _Reg_T_ = new RegExp(\"^\"+_TreeChar_.T,\"g\"),\n    _Reg_L_ = new RegExp(\"^\"+_TreeChar_.L,\"g\"),\n    _Reg___ = new RegExp(\"^\"+_TreeChar_._,\"g\");\nvar _repl_I_ = \"'\"+_TreeChar_.I+\"'\",\n    _repl_T_ = \"'\"+_TreeChar_.T+\"'\",\n    _repl_L_ = \"'\"+_TreeChar_.L+\"'\",\n    _repl___ = \"'\"+_TreeChar_._+\"'\";\nfunction replaceTreeLinkChar(str){\n    if(!!_hasTreeLinkChar(str)){\n        return str.replace(_Reg_I_,_repl_I_)\n            .replace(_Reg_T_,_repl_T_)\n            .replace(_Reg_L_,_repl_L_)\n            .replace(_Reg___,_repl___);\n    }\n    return str;\n}\n\n//通过二维数组检查兄弟节点情况\nfunction checkNextSibling(w,h,arr){\n    if(!Type.isArray(arr)){\n        throw new TypeError(\"arr is not a array!\");\n    }\n    var i,hasNextSibling = false;\n    for(i=(h+1);i<arr.length;i++){\n        if(!Type.isUndefined(arr[i]) && !Type.isArray(arr[i])){\n            throw new TypeError(\"arr is not a two-dimensional-array !\");\n        }\n\n        var ele = arr[i][w];\n        if(undefined===ele){\n            break;\n        }else if(isNodeStr(ele+\"\")){\n            hasNextSibling = true;\n            break;\n        }\n    }\n    return {\n        \"wPos\":w,\n        \"hPos\":i,\n        \"isLast\":!hasNextSibling\n    };\n}\n//修复简单粗暴生成的二位数字，以便生成正确的节点连接符\nfunction fixArr(arr){\n    if(!Type.isArray(arr)){\n        throw new TypeError(\"arr is not a array!\");\n    }\n    var regNode = new RegExp(\"^\" + _TreeChar_.T, \"g\"),\n        regVert = new RegExp(\"^\" + _TreeChar_.I ,\"g\"),\n        S = \" \";\n    var i,iLen = arr.length;\n    for(i=0;i<iLen;i++){\n        var row = arr[i];\n        if(!Type.isArray(row)){\n            throw  new TypeError(\"arr is not a two-dimensional-array !\");\n        }\n        var j,jLen = row.length;\n        for(j=0;j<jLen;j++){\n            var o = row[j];\n            if(undefined!==o && isNodeStr(o)){// 开始检查，且仅检查节点\n                var checkNext = checkNextSibling(j,i,arr);\n                if(checkNext.isLast){\n                    arr[i][j] = o.replace(regNode, _TreeChar_.L);// \"├\" => \"└\"\n                    var c,cLen = checkNext.hPos;\n                    for(c=i+1;c<cLen;c++){\n                        if(arr[c]){\n                            if(!!arr[c][j] && !!arr[c][j].match(regVert)){\n                                arr[c][j] = arr[c][j].replace(regVert,S);// \"│\" => \" \"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // 最后修正根节点: \"└\" => \"\", \"─\" => \" \"\n    var regSimRoot1 = new RegExp(_TreeChar_._,\"gi\"),\n        regSimRoot2 = new RegExp(_TreeChar_.T + \"|\" +  _TreeChar_.L,\"g\");\n    arr[0][0] = arr[0][0].replace(regSimRoot1,\" \").replace(regSimRoot2,\"\");\n\n    return arr;\n}\n// 重复产生n和char并组成字符串返回\nfunction repeatChar(char,n){\n    var res = \"\";\n    char = Type.isChar(char) ? char : \"*\";\n    n = parseInt(n) || 0;\n    n = n > 0 ? n : 0;\n    if(n>0) while(n--) res += char;\n    return res;\n}\n\n\n\n/**\n * 将json对象转换成树状形式的字符串\n *   view process with 'example/img/flow.png'\n * @param {Object} json\n * @param  {Object} options\n *         {String} options.rootName\n *    {char|Number} options.space  [1,8]\n *         {Number} options.vSpace [0,2]\n *        {Boolean} options.valueOut\n *        {Boolean} options.msRetrunChar '\\r'\n * @returns {string} a tree-like string\n */\nfunction treeString(json,options){\n\n    // config\n    options =  options || {};\n    var jsonName,space,vSpace,needValueOut, msRetrunChar;//不做空值保护，后面挨个做\n    jsonName = options.rootName;\n    space = options.space;\n    vSpace = options.vSpace;\n    needValueOut = options.valueOut;\n    msRetrunChar = options.msRetrunChar || false;\n\n    // 根节点名称\n    jsonName = (Type.isString(jsonName) ? jsonName : 0) || \"ROOT\";\n    if(Type.isNill(json)){\n        return jsonName + \"'s content is \" + String(json);\n    }else if(Type.isObject.isEmptyOwn(json)){\n        return jsonName + \"'s content is empty!\";\n    }else if(!Type.isSpreadable(json)){\n        return jsonName + \"'s content is \" + (Type.isString(json) ? (escapeString(json)||String(json)) : String(json)) || \"empty!\";\n    }\n    // 间距\n    var _SPACE_ = space;\n    if(\"\\t\"!==space){\n        space = parseInt(space);\n        space = Type.isNaN(space) ? 3 : space;\n        space = space <= 0 ? 1 : space > 8 ? 8 : space;//1 <= space <= 8\n        _SPACE_ = _TreeChar_[space];\n    }else{\n        _SPACE_ = \"\" + (space || \" \");\n        space = 1;\n    }\n    vSpace = parseInt(vSpace);\n    vSpace = Type.isNaN(vSpace) ? (space > 5 ? 2 : 1) : vSpace;\n    vSpace = vSpace< 0 ? 0 : vSpace > 2 ? 2 : vSpace;//0 <= vSpace <= 2\n    // 是否需要输出值\n    needValueOut = Type.isNill(needValueOut) ? true : !!needValueOut;\n\n    var rpN = parseInt((space-1)/2);//为了美观一点，控制节点间距 1->0 2->0 3->1 4->1 5->2 6->2 7->3 8->3\n    var _I_ = _TreeChar_.I + _SPACE_,//连接符\n        _T_ = _TreeChar_.T + repeatChar(_TreeChar_._,rpN) + \" \",//叶节点\n        SPLIT = _TreeChar_.SPLIT + \" \";//尾叶节点\n    var ft = (Math.floor(jsonName.length/2))  % 10;// 左间距 max 10\n    var _rT_ = _TreeChar_.T + \" \";//求取根节点的符号\n    var _I1_ = _TreeChar_.I + repeatChar(\" \",ft-1);// 最左边的符号和间距\n\n    //res:用于存储节点信息的二维数组,末尾显式加上值undefined来区分是否为父节点\n    var res = [\n        [_rT_ + jsonName, undefined]//加上 _T_ 开头是为了表明这是一个节点，为了fixArr做准备\n    ];\n    if(vSpace>0){\n        var q;\n        for(q=0;q<vSpace;q++){\n            res.push([_I1_ , _I_]); //此行元素用以增加根节点之下的连字符的竖直距离\n        }\n    }\n\n    // travel\n    travelJson(json,function(key,value,curKeyPath,typeStr,isSpreadable,curDepth){\n        var depth = curDepth;\n        var v;\n        if(!isSpreadable){\n            if(needValueOut){\n                if(typeStr===\"string\"){\n                    // 如果v值中就包含了特殊连接符号，需要转换一下\n                    v = replaceTreeLinkChar(value);//v = value; //其实不转也行的\n                    v = escapeString(v) || String(v);\n                }else if(typeStr===\"array\"){//空数组\n                    v = \"[]\";\n                }else if(typeStr===\"object\"){//空对象\n                    v = \"{}\";\n                }else if(typeStr===\"function\"){\n                    v = \"[function code]\";\n                }else{\n                    v = String(value);\n                }\n                // 只有叶子节点才放值，父节点放undefined,采用显式赋值undefined作为父节点的标识（显式加入undefined元素可以占一个位置，会增加数组的length）\n                v = SPLIT + v;\n            }else{\n                // 不输出值，（此时应该是空字符串，而非undefined!，不然跟父节点混淆了）\n                v = \"\";\n            }\n        }else{\n            // 显式的赋值undefined，仅仅是为了标识区别出‘可拓展节点’（含有子属性的父节点）\n            v = undefined;\n        }\n        // 一横行：res[n]\n        var lineArr = [],i;\n        for(i=1;i<depth;i++){// 左边缩进用的元素\n            lineArr.push(i===1?_I1_:_I_);//首元素加入的是_I1_\n        }\n        lineArr.push(_T_ + escapeString(key).slice(1,-1));// 节点名\n        lineArr.push(v);// 节点值\n\n        // 保存行信息\n        res.push(lineArr);\n\n        // 竖直方向上的间距\n        var vs;\n        for(vs=0;vs<vSpace;vs++){\n            // 增加一行竖直方向上的距离\n            res.push(lineArr.map(function(item,index){\n                var isFirst = index===0,//首元素加入的是_I1_\n                    isLast = index===(lineArr.length-1),\n                    isSpreadableNodeEndFlag = isLast && item===undefined;\n                return index<(lineArr.length-1) || isSpreadableNodeEndFlag ? (isFirst?_I1_:_I_) : undefined;\n            }));\n        }\n\n    },\"obj\");\n\n    // 修正节点连接符\n    fixArr(res);\n\n    // 打印输出\n    // var color = require(\"./cli/colorful\");\n    // res.forEach(function(item){\n    //     var strOut = \"[\";\n    //     item.forEach(function(sub,subIndex){\n    //         strOut += ((sub===undefined?color.magenta(\"undefined\"):color.yellow(\"'\"+sub+\"'\"))  + (subIndex===(item.length-1) ? \"\" : \", \"));\n    //     });\n    //     strOut += \"]\";\n    //     console.log(strOut);\n    // });\n\n    return res.map(function(item){\n        return trimRight(item.join(\"\"));//item.join(\"\");\n    }).join(msRetrunChar ?\"\\r\\n\":\"\\n\");// '\\r' just for windows\n    // 可以考虑在完全生成之后，做replace替换那几个特殊字符，以便完成自定义连接符\n}\n\n// exports\nmodule.exports = treeString;"],"sourceRoot":""}